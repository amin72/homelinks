# Generated by Django 2.1.7 on 2019-03-13 06:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import links.models
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, max_length=60)),
                ('url', models.URLField(verbose_name='URL')),
                ('description', models.TextField(help_text="Link's description up to 500 characters", max_length=500, verbose_name='Description')),
                ('image', models.ImageField(upload_to=links.models.image_upload_path, verbose_name='Image')),
                ('created', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('application', models.CharField(choices=[('telegram', 'Telegram'), ('soroush', 'Soroush'), ('gap', 'Gap'), ('igap', 'IGap'), ('eitaa', 'Eitaa')], max_length=8, verbose_name='Application')),
                ('channel_id', models.CharField(max_length=32, verbose_name='Channel ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='links.Category', verbose_name='Category')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='links.Channel')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, max_length=60)),
                ('url', models.URLField(verbose_name='URL')),
                ('description', models.TextField(help_text="Link's description up to 500 characters", max_length=500, verbose_name='Description')),
                ('image', models.ImageField(upload_to=links.models.image_upload_path, verbose_name='Image')),
                ('created', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('application', models.CharField(choices=[('whatsapp', 'Whatsapp'), ('telegram', 'Telegram'), ('soroush', 'Soroush'), ('gap', 'Gap'), ('igap', 'IGap'), ('eitaa', 'Eitaa')], max_length=8, verbose_name='Application')),
                ('uuid', models.CharField(default=uuid.uuid4, editable=False, max_length=36)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='links.Category', verbose_name='Category')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='links.Group')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Instagram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, max_length=60)),
                ('url', models.URLField(verbose_name='URL')),
                ('description', models.TextField(help_text="Link's description up to 500 characters", max_length=500, verbose_name='Description')),
                ('image', models.ImageField(upload_to=links.models.image_upload_path, verbose_name='Image')),
                ('created', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('page_id', models.CharField(max_length=30, verbose_name='Page ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='links.Category', verbose_name='Category')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='links.Instagram')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, max_length=60)),
                ('url', models.URLField(verbose_name='URL')),
                ('description', models.TextField(help_text="Link's description up to 500 characters", max_length=500, verbose_name='Description')),
                ('image', models.ImageField(upload_to=links.models.image_upload_path, verbose_name='Image')),
                ('created', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('type', models.CharField(choices=[('iranian', 'Iranian'), ('foreign', 'Foreign')], max_length=7, verbose_name='Type of Link')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='links.Category', verbose_name='Category')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='links.Website')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
    ]
